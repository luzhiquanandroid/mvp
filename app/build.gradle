apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'walle'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.admin.myapplication"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "04b3c59e7572e2f565963554", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    //魔蝎SDK moxie-client-1.3.4.aar需要加入下面代码
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    signingConfigs {
        meituan {
            storeFile file("../../doc/mogu.jks")
            storePassword "mogu2018"
            keyAlias "mogu"
            keyPassword "mogu2018"
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.meituan
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.meituan
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    implementation 'me.drakeet.materialdialog:library:1.3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'

    //网络请求
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'


    implementation 'com.android.support:multidex:1.0.3'
    //页面刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    //文件下载
    implementation 'com.liulishuo.filedownloader:library:1.7.2'
    //管理fragment
    implementation 'me.yokeyword:fragmentation:1.3.1'

    //魔蝎淘宝认证
    implementation 'com.moxie:moxie-client:2.3.5'
    //美团
    implementation 'com.meituan.android.walle:library:1.1.6'

    //umeng
    implementation 'com.umeng.sdk:common:1.5.0'
    implementation 'com.umeng.sdk:analytics:7.5.0'

    //极光
    implementation 'cn.jiguang.sdk:jpush:3.0.9'
    implementation 'cn.jiguang.sdk:jcore:1.1.7'

    //腾讯bugly
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'

    //存储crash日志
    implementation 'com.balsikandar.android:crashreporter:1.0.9'
    //获取联系人
    implementation 'com.github.tamir7.contacts:contacts:1.1.7'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //动画
    implementation 'com.airbnb.android:lottie:2.5.4'


}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}
